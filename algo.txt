#方針

考えられるロボットの動きからできるだけコスト関数が小さいものを選びたいが、課題の100歩までを全探索すると4^100回の計算が必要になり、制限時間に間に合わない。
よって、この探索を高速化する手法を考える。
ここで、時間t_1にロボットがタイルI_1の上に存在する場合、時間t_1までのロボットの経路に関わらず、時間t_2にロボットがタイルI_2の上に存在する場合の時間t_1からt_2で考えれるコストの最小値は一定であるといえる。
すなわち、この問題はdp[t][I]:時刻tにロボットがタイルIの上に存在できるときの、時刻tまでのコストとして最小の値　という動的計画法で最適解を導出することができる。
この方法は、時刻tまでについてO(tL^2)で解くことが出来るため十分に高速である。

#実装

経路を復元する方法として、dpにどちらの方向から来たかの情報を持たせる方法と、終着点を求めた後に、隣接するタイルのうちそこから遷移できるものを探していく方法があるが、「dpと復元部の処理を完全に分離できる」「余計な読み書きをdp処理中に行わないことで、dp配列をキャッシュから読み書きできることが期待できる」などの理由から後者を採用した。